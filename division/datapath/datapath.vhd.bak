library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity datapath is
	port(
		clk, rst: in std_logic;
		a_in, b_in: in std_logic_vector(7 downto 0);
		a_load, b_load, c_load, r_load, a_sel, c_sel: in std_logic;
		c, r: out std_logic_vector(7 downto 0);
		altb: out std_logic
	);
end datapath;

architecture estructural of datapath is

signal a_reg, b_reg, c_reg, r_reg: unsigned(7 downto 0);
signal a_mux, c_mux, rest_out, sum_out: unsigned(7 downto 0);

begin

	-- proceso de memoria
	process(clk, rst)
	begin
		if rst = '1' then
			a_reg <= (others => '0');
			b_reg <= (others => '0');
			c_reg <= (others => '0');
			r_reg <= (others => '0');
		elsif rising_edge(clk) then
			if a_load = '1' then
				a_reg <= a_mux;
			end if;
			
			if b_load = '1' then
				b_reg <= unsigned(b_in);
			end if;
			
			if c_load = '1' then
				c_reg <= c_mux;
			end if;
			
			if r_load = '1' then
				r_reg <= a_reg;
			end if;
		end if;			
	end process;

end estructural;